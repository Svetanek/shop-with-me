{"ast":null,"code":"var _jsxFileName = \"/Users/svetlanashin/Desktop/E-commerce/shop-with-me/src/pages/shop/shop.component.jsx\";\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { getCollections } from '../../redux/shop/shop.actions'; // import { gettingCollections } from '../../redux/shop/shop.actions';\n\nimport { selectCollectionFetching } from '../../redux/shop/shop.selectors';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({\n  getCollections,\n  match\n}, ...props) => {\n  useEffect(() => {\n    getCollections();\n  }, [getCollections]);\n  return React.createElement(\"div\", {\n    className: \"shop-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(match.path),\n    component: CollectionsOverviewContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"\".concat(match.path, \"/:collectionId\"),\n    render: props => React.createElement(CollectionPageWithSpinner, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getCollections: () => dispatch(getCollections())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage); // unsubscribeFromSnapshot = null;\n// componentDidMount() {\n//   const { getCollections } = this.props;\n//   getCollections();\n// }","map":{"version":3,"sources":["/Users/svetlanashin/Desktop/E-commerce/shop-with-me/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","createStructuredSelector","getCollections","selectCollectionFetching","CollectionsOverviewContainer","CollectionPage","WithSpinner","CollectionPageWithSpinner","ShopPage","match","props","path","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,cAAT,QAA+B,+BAA/B,C,CACA;;AACA,SAASC,wBAAT,QAAyC,iCAAzC;AACA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,yBAAyB,GAAGD,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMG,QAAQ,GAAG,CAAC;AAAEN,EAAAA,cAAF;AAAkBO,EAAAA;AAAlB,CAAD,EAA4B,GAAGC,KAA/B,KAAyC;AACxDZ,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACA,cAAD,CAFM,CAAT;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,YAAKO,KAAK,CAACE,IAAX,CAFN;AAGE,IAAA,SAAS,EAAEP,4BAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,KAAD;AACE,IAAA,IAAI,YAAKK,KAAK,CAACE,IAAX,mBADN;AAEE,IAAA,MAAM,EAAED,KAAK,IAAI,oBAAC,yBAAD,oBAA+BA,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAaD,CAjBD;;AAmBA,MAAME,eAAe,GAAGX,wBAAwB,CAAC;AAC/CY,EAAAA,oBAAoB,EAAEV;AADyB,CAAD,CAAhD;;AAGA,MAAMW,kBAAkB,GAAGC,QAAQ,KAAK;AACtCb,EAAAA,cAAc,EAAE,MAAMa,QAAQ,CAACb,cAAc,EAAf;AADQ,CAAL,CAAnC;;AAGA,eAAeF,OAAO,CAACY,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CN,QAA7C,CAAf,C,CAEA;AAEA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { getCollections } from '../../redux/shop/shop.actions';\n// import { gettingCollections } from '../../redux/shop/shop.actions';\nimport { selectCollectionFetching } from '../../redux/shop/shop.selectors';\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nconst ShopPage = ({ getCollections, match }, ...props) => {\n  useEffect(() => {\n    getCollections();\n  }, [getCollections]);\n  return (\n    <div className=\"shop-page\">\n      <Route\n        exact\n        path={`${match.path}`}\n        component={CollectionsOverviewContainer}\n      />\n      <Route\n        path={`${match.path}/:collectionId`}\n        render={props => <CollectionPageWithSpinner {...props} />}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectCollectionFetching,\n});\nconst mapDispatchToProps = dispatch => ({\n  getCollections: () => dispatch(getCollections()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\n// unsubscribeFromSnapshot = null;\n\n// componentDidMount() {\n//   const { getCollections } = this.props;\n//   getCollections();\n// }\n"]},"metadata":{},"sourceType":"module"}