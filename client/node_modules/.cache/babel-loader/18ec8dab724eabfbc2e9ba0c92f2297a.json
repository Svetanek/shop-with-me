{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const getCollections = () => ({\n  type: ShopActionTypes.GET_COLLECTIONS\n});\nexport const gotCollections = collectionsMap => ({\n  type: ShopActionTypes.GOT_COLLECTIONS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n}); // export const gettingCollections = () => {\n//   return async dispatch => {\n//     try {\n//       const collectionRef = firestore.collection('collections');\n//       dispatch(getCollections());\n//       const snapshot = await collectionRef.get();\n//       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//       dispatch(gotCollections(collectionsMap));\n//     } catch (error) {\n//       dispatch(fetchCollectionsFailure(error.message));\n//     }\n//   };\n// };","map":{"version":3,"sources":["/Users/svetlanashin/Desktop/E-commerce/shop-with-me/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","getCollections","type","GET_COLLECTIONS","gotCollections","collectionsMap","GOT_COLLECTIONS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,cAAc,GAAG,OAAO;AACnCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADa,CAAP,CAAvB;AAGP,OAAO,MAAMC,cAAc,GAAGC,cAAc,KAAK;AAC/CH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,eADyB;AAE/CC,EAAAA,OAAO,EAAEF;AAFsC,CAAL,CAArC;AAIP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACtDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADgC;AAEtDH,EAAAA,OAAO,EAAEE;AAF6C,CAAL,CAA5C,C,CAIP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ShopActionTypes from './shop.types';\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\n\nexport const getCollections = () => ({\n  type: ShopActionTypes.GET_COLLECTIONS,\n});\nexport const gotCollections = collectionsMap => ({\n  type: ShopActionTypes.GOT_COLLECTIONS,\n  payload: collectionsMap,\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage,\n});\n// export const gettingCollections = () => {\n//   return async dispatch => {\n//     try {\n//       const collectionRef = firestore.collection('collections');\n//       dispatch(getCollections());\n//       const snapshot = await collectionRef.get();\n//       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n//       dispatch(gotCollections(collectionsMap));\n//     } catch (error) {\n//       dispatch(fetchCollectionsFailure(error.message));\n//     }\n//   };\n// };\n"]},"metadata":{},"sourceType":"module"}