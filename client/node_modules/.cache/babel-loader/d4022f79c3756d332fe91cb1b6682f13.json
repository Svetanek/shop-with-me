{"ast":null,"code":"export const addItemToCart = (cartItems, itemToAdd) => {\n  const itemExist = cartItems.find(item => item.id === itemToAdd.id);\n\n  if (itemExist) {\n    return cartItems.map(item => {\n      if (item.id === itemToAdd.id) {\n        item.quantity = item.quantity + 1;\n      }\n\n      return item;\n    });\n  } else {\n    itemToAdd.quantity = 1;\n    cartItems.push(itemToAdd);\n    return cartItems;\n  }\n}; // export const addItemToCart = (cartItems, itemToAdd) => {\n//   const itemExist = cartItems.find(cartItem => cartItem.id === itemToAdd.id);\n//   if (itemExist) {\n//     return cartItems.map(item => {\n//       if (item.id === itemToAdd.id) {\n//         item.quantity = item.quantity + 1;\n//       }\n//       return item;\n//     });\n//   } else return [...cartItems, { ...itemToAdd, quantity: 1 }];\n// };","map":{"version":3,"sources":["/Users/svetlanashin/Desktop/E-commerce/shop-with-me/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","itemToAdd","itemExist","find","item","id","map","quantity","push"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACrD,QAAMC,SAAS,GAAGF,SAAS,CAACG,IAAV,CAAeC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,SAAS,CAACI,EAA7C,CAAlB;;AACA,MAAIH,SAAJ,EAAe;AACb,WAAOF,SAAS,CAACM,GAAV,CAAcF,IAAI,IAAI;AAC3B,UAAIA,IAAI,CAACC,EAAL,KAAYJ,SAAS,CAACI,EAA1B,EAA8B;AAC5BD,QAAAA,IAAI,CAACG,QAAL,GAAgBH,IAAI,CAACG,QAAL,GAAgB,CAAhC;AACD;;AAED,aAAOH,IAAP;AACD,KANM,CAAP;AAOD,GARD,MAQO;AACLH,IAAAA,SAAS,CAACM,QAAV,GAAqB,CAArB;AACAP,IAAAA,SAAS,CAACQ,IAAV,CAAeP,SAAf;AACA,WAAOD,SAAP;AACD;AACF,CAfM,C,CAiBP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA","sourcesContent":["export const addItemToCart = (cartItems, itemToAdd) => {\n  const itemExist = cartItems.find(item => item.id === itemToAdd.id);\n  if (itemExist) {\n    return cartItems.map(item => {\n      if (item.id === itemToAdd.id) {\n        item.quantity = item.quantity + 1;\n      }\n\n      return item;\n    });\n  } else {\n    itemToAdd.quantity = 1;\n    cartItems.push(itemToAdd);\n    return cartItems;\n  }\n};\n\n// export const addItemToCart = (cartItems, itemToAdd) => {\n//   const itemExist = cartItems.find(cartItem => cartItem.id === itemToAdd.id);\n//   if (itemExist) {\n//     return cartItems.map(item => {\n//       if (item.id === itemToAdd.id) {\n//         item.quantity = item.quantity + 1;\n//       }\n\n//       return item;\n//     });\n//   } else return [...cartItems, { ...itemToAdd, quantity: 1 }];\n// };\n"]},"metadata":{},"sourceType":"module"}