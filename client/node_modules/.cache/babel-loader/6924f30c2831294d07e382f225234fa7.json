{"ast":null,"code":"import _defineProperty from \"/Users/svetlanashin/Desktop/E-commerce/shop-with-me/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import { TOGGLE_CART_HIDDEN } from './cart.actions';\nimport CartActionTypes from './cart.types';\nimport { addItemToCart, decreaseQuantityInCart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n    // return { ...state, cartItems: [...state.cartItems, action.item] };\n\n    case CartActionTypes.DELETE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(item => item.id !== action.payload.id)\n      });\n\n    case CartActionTypes.DECREASE_COUNT:\n      return _objectSpread({}, state, {\n        cartItems: decreaseQuantityInCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_ALL:\n      return _objectSpread({}, state, {\n        cartItems: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/svetlanashin/Desktop/E-commerce/shop-with-me/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","decreaseQuantityInCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","DELETE_ITEM","filter","item","id","DECREASE_COUNT","CLEAR_ALL"],"mappings":";;;;;;AAAA;AACA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,EAAwBC,sBAAxB,QAAsD,cAAtD;AACA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,kBAArB;AACE,+BAAYH,KAAZ;AAAmBH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAAlC;;AACF,SAAKJ,eAAe,CAACW,QAArB;AACE,+BACKJ,KADL;AAEEF,QAAAA,SAAS,EAAEJ,aAAa,CAACM,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF1B;AAIF;;AACA,SAAKZ,eAAe,CAACa,WAArB;AACE,+BACKN,KADL;AAEEF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CACTC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACI,OAAP,CAAeI,EAD1B;AAFb;;AAMF,SAAKhB,eAAe,CAACiB,cAArB;AACE,+BACKV,KADL;AAEEF,QAAAA,SAAS,EAAEH,sBAAsB,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFnC;;AAIF,SAAKZ,eAAe,CAACkB,SAArB;AACE,+BAAYX,KAAZ;AAAmBF,QAAAA,SAAS,EAAE;AAA9B;;AACF;AACE,aAAOE,KAAP;AAxBJ;AA0BD,CA3BD;;AA6BA,eAAeD,WAAf","sourcesContent":["// import { TOGGLE_CART_HIDDEN } from './cart.actions';\nimport CartActionTypes from './cart.types';\nimport { addItemToCart, decreaseQuantityInCart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: [],\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...state, hidden: !state.hidden };\n    case CartActionTypes.ADD_ITEM:\n      return {\n        ...state,\n        cartItems: addItemToCart(state.cartItems, action.payload),\n      };\n    // return { ...state, cartItems: [...state.cartItems, action.item] };\n    case CartActionTypes.DELETE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter(\n          item => item.id !== action.payload.id\n        ),\n      };\n    case CartActionTypes.DECREASE_COUNT:\n      return {\n        ...state,\n        cartItems: decreaseQuantityInCart(state.cartItems, action.payload),\n      };\n    case CartActionTypes.CLEAR_ALL:\n      return { ...state, cartItems: [] };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;\n"]},"metadata":{},"sourceType":"module"}