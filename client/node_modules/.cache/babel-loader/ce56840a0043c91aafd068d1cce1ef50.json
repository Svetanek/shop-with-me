{"ast":null,"code":"var _jsxFileName = \"/Users/svetlanashin/Desktop/E-commerce/shop-with-me/client/src/components/stripe-button/stripe-button.component.jsx\";\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { clearCart } from '../../redux/cart/cart.actions';\n\nconst StripeCheckoutButton = ({\n  price,\n  history,\n  clearCart\n}) => {\n  const priceInCents = price * 100;\n  const publishableKey = 'pk_test_6cK6c3cc70YIkRkdqxH2d8Q10052CeFnOC';\n\n  const onToken = async token => {\n    try {\n      const tokenObj = await axios({\n        url: 'payment',\n        method: 'post',\n        data: {\n          amount: priceInCents,\n          token: token\n        }\n      });\n      alert('Payment Successful');\n    } catch (error) {\n      console.log('Payment error', JSON.parse(error));\n      alert('there was an issue with your payment. Please make sure you use the correct credit card info');\n    } // clearCart();\n    // alert('Payment Successful');\n    // history.push('/');\n\n  };\n\n  return React.createElement(StripeCheckout, {\n    label: \"Pay Now\",\n    name: \"SHOP WITH US\",\n    billingAddress: true,\n    shippingAddress: true,\n    image: \"https://svgshare.com/i/CUz.svg\",\n    description: \"Your total is $\".concat(price),\n    amount: priceInCents,\n    panelLabel: \"Pay Now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart())\n});\n\nexport default withRouter(connect(null, mapDispatchToProps)(StripeCheckoutButton));","map":{"version":3,"sources":["/Users/svetlanashin/Desktop/E-commerce/shop-with-me/client/src/components/stripe-button/stripe-button.component.jsx"],"names":["React","StripeCheckout","connect","withRouter","axios","clearCart","StripeCheckoutButton","price","history","priceInCents","publishableKey","onToken","token","tokenObj","url","method","data","amount","alert","error","console","log","JSON","parse","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,+BAA1B;;AAEA,MAAMC,oBAAoB,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBH,EAAAA;AAAlB,CAAD,KAAmC;AAC9D,QAAMI,YAAY,GAAGF,KAAK,GAAG,GAA7B;AACA,QAAMG,cAAc,GAAG,4CAAvB;;AAEA,QAAMC,OAAO,GAAG,MAAMC,KAAN,IAAe;AAC7B,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAAC;AAC3BU,QAAAA,GAAG,EAAE,SADsB;AAE3BC,QAAAA,MAAM,EAAE,MAFmB;AAG3BC,QAAAA,IAAI,EAAE;AACJC,UAAAA,MAAM,EAAER,YADJ;AAEJG,UAAAA,KAAK,EAAEA;AAFH;AAHqB,OAAD,CAA5B;AAQAM,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACD,KAVD,CAUE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA7B;AACAD,MAAAA,KAAK,CACH,6FADG,CAAL;AAGD,KAhB4B,CAkB7B;AACA;AACA;;AACD,GArBD;;AAuBA,SACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,IAAI,EAAC,cAFP;AAGE,IAAA,cAAc,MAHhB;AAIE,IAAA,eAAe,MAJjB;AAKE,IAAA,KAAK,EAAC,gCALR;AAME,IAAA,WAAW,2BAAoBX,KAApB,CANb;AAOE,IAAA,MAAM,EAAEE,YAPV;AAQE,IAAA,UAAU,EAAC,SARb;AASE,IAAA,KAAK,EAAEE,OATT;AAUE,IAAA,SAAS,EAAED,cAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAcD,CAzCD;;AA0CA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACtCpB,EAAAA,SAAS,EAAE,MAAMoB,QAAQ,CAACpB,SAAS,EAAV;AADa,CAAL,CAAnC;;AAIA,eAAeF,UAAU,CACvBD,OAAO,CAAC,IAAD,EAAOsB,kBAAP,CAAP,CAAkClB,oBAAlC,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { clearCart } from '../../redux/cart/cart.actions';\n\nconst StripeCheckoutButton = ({ price, history, clearCart }) => {\n  const priceInCents = price * 100;\n  const publishableKey = 'pk_test_6cK6c3cc70YIkRkdqxH2d8Q10052CeFnOC';\n\n  const onToken = async token => {\n    try {\n      const tokenObj = await axios({\n        url: 'payment',\n        method: 'post',\n        data: {\n          amount: priceInCents,\n          token: token,\n        },\n      });\n      alert('Payment Successful');\n    } catch (error) {\n      console.log('Payment error', JSON.parse(error));\n      alert(\n        'there was an issue with your payment. Please make sure you use the correct credit card info'\n      );\n    }\n\n    // clearCart();\n    // alert('Payment Successful');\n    // history.push('/');\n  };\n\n  return (\n    <StripeCheckout\n      label=\"Pay Now\"\n      name=\"SHOP WITH US\"\n      billingAddress\n      shippingAddress\n      image=\"https://svgshare.com/i/CUz.svg\"\n      description={`Your total is $${price}`}\n      amount={priceInCents}\n      panelLabel=\"Pay Now\"\n      token={onToken}\n      stripeKey={publishableKey}\n    />\n  );\n};\nconst mapDispatchToProps = dispatch => ({\n  clearCart: () => dispatch(clearCart()),\n});\n\nexport default withRouter(\n  connect(null, mapDispatchToProps)(StripeCheckoutButton)\n);\n"]},"metadata":{},"sourceType":"module"}