{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nimport { gotCollections, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(gotCollections(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.GET_COLLECTIONS, fetchCollectionAsync);\n}","map":{"version":3,"sources":["/Users/svetlanashin/Desktop/E-commerce/shop-with-me/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","gotCollections","fetchCollectionsFailure","fetchCollectionAsync","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","GET_COLLECTIONS"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,cAAT,EAAyBC,uBAAzB,QAAwD,gBAAxD;AAEA,OAAO,UAAUC,oBAAV,GAAiC;AACtC,MAAI;AACF,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAC/BG,+BAD+B,EAE/BO,QAF+B,CAAjC;AAIA,UAAMT,GAAG,CAACI,cAAc,CAACO,cAAD,CAAf,CAAT;AACD,GARD,CAQE,OAAOC,KAAP,EAAc;AACd,UAAMZ,GAAG,CAACK,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMhB,UAAU,CAACK,eAAe,CAACY,eAAjB,EAAkCT,oBAAlC,CAAhB;AACD","sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nimport { gotCollections, fetchCollectionsFailure } from './shop.actions';\n\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n    yield put(gotCollections(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.GET_COLLECTIONS, fetchCollectionAsync);\n}\n"]},"metadata":{},"sourceType":"module"}