{"ast":null,"code":"var _jsxFileName = \"/Users/svetlanashin/Desktop/E-commerce/shop-with-me/src/components/sign-up/sign-up.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport Button from '../button/button.component';\nimport { signUpStart } from '../../redux/user/user.actions'; // import { auth, createUserProfileDoc } from '../../firebase/firebase.utils';\n\nimport './sign-up.styles.scss'; // import { tsMethodSignature } from '@babel/types';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const _this$state = this.state,\n            displayName = _this$state.displayName,\n            email = _this$state.email,\n            password = _this$state.password,\n            confirmPassword = _this$state.confirmPassword;\n      const signUpStart = this.props.signUpStart;\n\n      if (password !== confirmPassword) {\n        alert(\"passwords don't match\");\n        return;\n      }\n\n      signUpStart({\n        displayName,\n        email,\n        password\n      }); // try {\n      //   const { user } = await auth.createUserWithEmailAndPassword(\n      //     email,\n      //     password\n      //   );\n      //   await createUserProfileDoc(user, { displayName });\n      // this.setState({\n      //   displayName: '',\n      //   email: '',\n      //   password: '',\n      //   confirmPassword: '',\n      // });\n      // } catch (error) {\n      //   console.error(error);\n      // }\n    };\n\n    this.handleChange = e => {\n      const _e$target = e.target,\n            name = _e$target.name,\n            value = _e$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          displayName = _this$state2.displayName,\n          email = _this$state2.email,\n          password = _this$state2.password,\n          confirmPassword = _this$state2.confirmPassword;\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userData => dispatch(signUpStart(userData))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/svetlanashin/Desktop/E-commerce/shop-with-me/src/components/sign-up/sign-up.component.jsx"],"names":["React","connect","FormInput","Button","signUpStart","SignUp","Component","constructor","handleSubmit","event","preventDefault","state","displayName","email","password","confirmPassword","props","alert","handleChange","e","target","name","value","setState","render","mapDispatchToProps","dispatch","userData"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport Button from '../button/button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\n// import { auth, createUserProfileDoc } from '../../firebase/firebase.utils';\nimport './sign-up.styles.scss';\n// import { tsMethodSignature } from '@babel/types';\n\nclass SignUp extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n    };\n  }\n  handleSubmit = async event => {\n    event.preventDefault();\n    const { displayName, email, password, confirmPassword } = this.state;\n    const { signUpStart } = this.props;\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n    signUpStart({ displayName, email, password });\n    // try {\n    //   const { user } = await auth.createUserWithEmailAndPassword(\n    //     email,\n    //     password\n    //   );\n    //   await createUserProfileDoc(user, { displayName });\n    // this.setState({\n    //   displayName: '',\n    //   email: '',\n    //   password: '',\n    //   confirmPassword: '',\n    // });\n    // } catch (error) {\n    //   console.error(error);\n    // }\n  };\n\n  handleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { displayName, email, password, confirmPassword } = this.state;\n    return (\n      <div className=\"sign-up\">\n        <h1 className=\"title\">I do not have an account</h1>\n        <span>Sign up with your email and password</span>\n        <form className=\"sign-up-form\" onSubmit={this.handleSubmit}>\n          <FormInput\n            type=\"text\"\n            name=\"displayName\"\n            value={displayName}\n            onChange={this.handleChange}\n            label=\"Display Name\"\n            required\n          />\n          <FormInput\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={this.handleChange}\n            label=\"Email\"\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={this.handleChange}\n            label=\"Password\"\n            required\n          />\n          <FormInput\n            type=\"password\"\n            name=\"confirmPassword\"\n            value={confirmPassword}\n            onChange={this.handleChange}\n            label=\"Confirm Password\"\n            required\n          />\n          <Button type=\"submit\">SIGN UP</Button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userData => dispatch(signUpStart(userData)),\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}