{"ast":null,"code":"import _defineProperty from \"/Users/svetlanashin/Desktop/E-commerce/shop-with-me/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, itemToAdd) => {\n  const itemExist = cartItems.find(cartItem => cartItem.id === itemToAdd.id);\n\n  if (itemExist) {\n    return cartItems.map(item => item.id === itemToAdd.id ? _objectSpread({}, item, {\n      quantity: item.quantity + 1\n    }) : item);\n  } else return [...cartItems, _objectSpread({}, itemToAdd, {\n    quantity: 1\n  })];\n};\nexport const decreaseQuantityInCart = (cartItems, itemToRemove) => {\n  if (itemToRemove.quantity === 1) {\n    console.log('just one item left');\n    return cartItems.filter(item => item.id !== itemToRemove);\n  } else {\n    return cartItems.map(item => item.id === itemToRemove.id ? _objectSpread({}, item, {\n      quantity: item.quantity - 1\n    }) : item);\n  }\n}; // export const addItemToCart = (cartItems, itemToAdd) => {\n//   const itemExist = cartItems.find(item => item.id === itemToAdd.id);\n//   if (itemExist) {\n//     return cartItems.map(item => {\n//       if (item.id === itemToAdd.id) {\n//         item.quantity = item.quantity + 1;\n//       }\n//       return item;\n//     });\n//   } else {\n//     itemToAdd.quantity = 1;\n//     cartItems.push(itemToAdd);\n//     return cartItems;\n//   }\n// };","map":{"version":3,"sources":["/Users/svetlanashin/Desktop/E-commerce/shop-with-me/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","itemToAdd","itemExist","find","cartItem","id","map","item","quantity","decreaseQuantityInCart","itemToRemove","console","log","filter"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACrD,QAAMC,SAAS,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,SAAS,CAACI,EAArD,CAAlB;;AACA,MAAIH,SAAJ,EAAe;AACb,WAAOF,SAAS,CAACM,GAAV,CAAcC,IAAI,IACvBA,IAAI,CAACF,EAAL,KAAYJ,SAAS,CAACI,EAAtB,qBAAgCE,IAAhC;AAAsCC,MAAAA,QAAQ,EAAED,IAAI,CAACC,QAAL,GAAgB;AAAhE,SAAsED,IADjE,CAAP;AAGD,GAJD,MAIO,OAAO,CAAC,GAAGP,SAAJ,oBAAoBC,SAApB;AAA+BO,IAAAA,QAAQ,EAAE;AAAzC,KAAP;AACR,CAPM;AASP,OAAO,MAAMC,sBAAsB,GAAG,CAACT,SAAD,EAAYU,YAAZ,KAA6B;AACjE,MAAIA,YAAY,CAACF,QAAb,KAA0B,CAA9B,EAAiC;AAC/BG,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,WAAOZ,SAAS,CAACa,MAAV,CAAiBN,IAAI,IAAIA,IAAI,CAACF,EAAL,KAAYK,YAArC,CAAP;AACD,GAHD,MAGO;AACL,WAAOV,SAAS,CAACM,GAAV,CAAcC,IAAI,IACvBA,IAAI,CAACF,EAAL,KAAYK,YAAY,CAACL,EAAzB,qBACSE,IADT;AACeC,MAAAA,QAAQ,EAAED,IAAI,CAACC,QAAL,GAAgB;AADzC,SAEID,IAHC,CAAP;AAKD;AACF,CAXM,C,CAaP;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["export const addItemToCart = (cartItems, itemToAdd) => {\n  const itemExist = cartItems.find(cartItem => cartItem.id === itemToAdd.id);\n  if (itemExist) {\n    return cartItems.map(item =>\n      item.id === itemToAdd.id ? { ...item, quantity: item.quantity + 1 } : item\n    );\n  } else return [...cartItems, { ...itemToAdd, quantity: 1 }];\n};\n\nexport const decreaseQuantityInCart = (cartItems, itemToRemove) => {\n  if (itemToRemove.quantity === 1) {\n    console.log('just one item left');\n    return cartItems.filter(item => item.id !== itemToRemove);\n  } else {\n    return cartItems.map(item =>\n      item.id === itemToRemove.id\n        ? { ...item, quantity: item.quantity - 1 }\n        : item\n    );\n  }\n};\n\n// export const addItemToCart = (cartItems, itemToAdd) => {\n//   const itemExist = cartItems.find(item => item.id === itemToAdd.id);\n//   if (itemExist) {\n//     return cartItems.map(item => {\n//       if (item.id === itemToAdd.id) {\n//         item.quantity = item.quantity + 1;\n//       }\n\n//       return item;\n//     });\n//   } else {\n//     itemToAdd.quantity = 1;\n//     cartItems.push(itemToAdd);\n//     return cartItems;\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}