{"ast":null,"code":"var _jsxFileName = \"/Users/svetlanashin/Desktop/E-commerce/shop-with-me/src/App.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component.jsx';\nimport Header from './components/header/header.component.jsx';\nimport SignInSignUpPage from './pages/sign-in-up-page/sign-in-up-page.component.jsx';\nimport CheckoutPage from './pages/checkout/checkout.component'; // import { setCurrentUser } from './redux/user/user.actions';\n\nimport { selectCurrentUser } from './redux/user/user.selector';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {// //const { setCurrentUser, collectionsArray } = this.props;\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    //   if (userAuth) {\n    //     const userRef = await createUserProfileDoc(userAuth);\n    //     //onSnapshot == similar to onAuthStateChanges\n    //     userRef.onSnapshot(snapshot => {\n    //       this.props.setCurrentUser({ id: snapshot.id, ...snapshot.data() });\n    //     });\n    //   } else {\n    //     this.props.setCurrentUser(userAuth);\n    //   }\n    // });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }) : React.createElement(SignInSignUpPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n}); // const mapDispatchToProps = dispatch => ({\n//   setCurrentUser: user => dispatch(setCurrentUser(user)),\n// });\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // to seed Firebase database:\n//import { selectCollectionForView } from './redux/shop/shop.selectors';\n//import { auth, createUserProfileDoc, addCollectionAndDocs} from './firebase/firebase.utils';\n// componentDidMount() {\n//   this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n//     if (userAuth) {\n//       const userRef = await createUserProfileDoc(userAuth);\n//       userRef.onSnapshot(snapshot => {\n//         this.props.setCurrentUser({ id: snapshot.id, ...snapshot.data() });\n//       });\n//     } else {\n//       this.props.setCurrentUser(userAuth);\n// ****LOOK HERE****\n//       addCollectionAndDocs(\n//         'collections',\n//         this.props.collectionsArray.map(({ title, items }) => ({\n//           title,\n//           items,\n//         }))\n//       );\n//     }\n//   });\n// }\n//const mapStateToProps = createStructuredSelector({\n//   currentUser: selectCurrentUser,\n//**** LOOK HERE****\n//   collectionsArray: selectCollectionForView,\n// });","map":{"version":3,"sources":["/Users/svetlanashin/Desktop/E-commerce/shop-with-me/src/App.js"],"names":["React","Switch","Route","Redirect","connect","createStructuredSelector","HomePage","ShopPage","Header","SignInSignUpPage","CheckoutPage","selectCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","componentWillUnmount","render","props","currentUser","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,OAAOC,gBAAP,MAA6B,uDAA7B;AACA,OAAOC,YAAP,MAAyB,qCAAzB,C,CACA;;AACA,SAASC,iBAAT,QAAkC,4BAAlC;;AAEA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,mBADgC,GACV,IADU;AAAA;;AAEhCC,EAAAA,iBAAiB,GAAG,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKF,mBAAL;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEX,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,MAAM,EAAE,MACN,KAAKW,KAAL,CAAWC,WAAX,GACE,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,GAGE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAcE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAET,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CAFF,CADF;AAqBD;;AA3C+B;;AA8ClC,MAAMU,eAAe,GAAGf,wBAAwB,CAAC;AAC/Cc,EAAAA,WAAW,EAAER;AADkC,CAAD,CAAhD,C,CAIA;AACA;AACA;;AACA,eAAeP,OAAO,CAACgB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,GAA7C,CAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport './App.css';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component.jsx';\nimport Header from './components/header/header.component.jsx';\nimport SignInSignUpPage from './pages/sign-in-up-page/sign-in-up-page.component.jsx';\nimport CheckoutPage from './pages/checkout/checkout.component';\n// import { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selector';\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n  componentDidMount() {\n    // //const { setCurrentUser, collectionsArray } = this.props;\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n    //   if (userAuth) {\n    //     const userRef = await createUserProfileDoc(userAuth);\n    //     //onSnapshot == similar to onAuthStateChanges\n    //     userRef.onSnapshot(snapshot => {\n    //       this.props.setCurrentUser({ id: snapshot.id, ...snapshot.data() });\n    //     });\n    //   } else {\n    //     this.props.setCurrentUser(userAuth);\n    //   }\n    // });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route\n            exact\n            path=\"/signin\"\n            render={() =>\n              this.props.currentUser ? (\n                <Redirect to=\"/\" />\n              ) : (\n                <SignInSignUpPage />\n              )\n            }\n          />\n          <Route exact path=\"/checkout\" component={CheckoutPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\n// const mapDispatchToProps = dispatch => ({\n//   setCurrentUser: user => dispatch(setCurrentUser(user)),\n// });\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n// to seed Firebase database:\n//import { selectCollectionForView } from './redux/shop/shop.selectors';\n//import { auth, createUserProfileDoc, addCollectionAndDocs} from './firebase/firebase.utils';\n\n// componentDidMount() {\n//   this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n//     if (userAuth) {\n//       const userRef = await createUserProfileDoc(userAuth);\n//       userRef.onSnapshot(snapshot => {\n//         this.props.setCurrentUser({ id: snapshot.id, ...snapshot.data() });\n//       });\n//     } else {\n//       this.props.setCurrentUser(userAuth);\n\n// ****LOOK HERE****\n//       addCollectionAndDocs(\n//         'collections',\n//         this.props.collectionsArray.map(({ title, items }) => ({\n//           title,\n//           items,\n//         }))\n//       );\n//     }\n//   });\n// }\n\n//const mapStateToProps = createStructuredSelector({\n//   currentUser: selectCurrentUser,\n//**** LOOK HERE****\n//   collectionsArray: selectCollectionForView,\n// });\n"]},"metadata":{},"sourceType":"module"}