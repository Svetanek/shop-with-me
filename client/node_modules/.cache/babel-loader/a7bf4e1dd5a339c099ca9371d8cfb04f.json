{"ast":null,"code":"var _jsxFileName = \"/Users/svetlanashin/Desktop/E-commerce/shop-with-me/src/App.js\";\nimport React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport './App.css';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component.jsx';\nimport Header from './components/header/header.component.jsx';\nimport SignInSignUpPage from './pages/sign-in-up-page/sign-in-up-page.component.jsx';\nimport CheckoutPage from './pages/checkout/checkout.component'; // import { setCurrentUser } from './redux/user/user.actions';\n\nimport { checkUserSession } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selector'; // put checkUserSession into the dependancy array since it's passed trough mapDispatchToProps\n\nconst App = ({\n  checkUserSession\n}) => {\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]); // unsubscribeFromAuth = null;\n  // componentDidMount() {\n  //   checkUserSession();\n  // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //   if (userAuth) {\n  //     const userRef = await createUserProfileDoc(userAuth);\n  //     //onSnapshot == similar to onAuthStateChanges\n  //     userRef.onSnapshot(snapshot => {\n  //       this.props.setCurrentUser({ id: snapshot.id, ...snapshot.data() });\n  //     });\n  //   } else {\n  //     this.props.setCurrentUser(userAuth);\n  //   }\n  // });\n  // }\n  // componentWillUnmount() {\n  //   this.unsubscribeFromAuth();\n  // }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: HomePage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/shop\",\n    component: ShopPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/signin\",\n    render: () => this.props.currentUser ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }) : React.createElement(SignInSignUpPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Route, {\n    exact: true,\n    path: \"/checkout\",\n    component: CheckoutPage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  })));\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // to seed Firebase database:\n//import { selectCollectionForView } from './redux/shop/shop.selectors';\n//import { auth, createUserProfileDoc, addCollectionAndDocs} from './firebase/firebase.utils';\n// componentDidMount() {\n//   this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n//     if (userAuth) {\n//       const userRef = await createUserProfileDoc(userAuth);\n//       userRef.onSnapshot(snapshot => {\n//         this.props.setCurrentUser({ id: snapshot.id, ...snapshot.data() });\n//       });\n//     } else {\n//       this.props.setCurrentUser(userAuth);\n// ****LOOK HERE****\n//       addCollectionAndDocs(\n//         'collections',\n//         this.props.collectionsArray.map(({ title, items }) => ({\n//           title,\n//           items,\n//         }))\n//       );\n//     }\n//   });\n// }\n//const mapStateToProps = createStructuredSelector({\n//   currentUser: selectCurrentUser,\n//**** LOOK HERE****\n//   collectionsArray: selectCollectionForView,\n// });","map":{"version":3,"sources":["/Users/svetlanashin/Desktop/E-commerce/shop-with-me/src/App.js"],"names":["React","useEffect","Switch","Route","Redirect","connect","createStructuredSelector","HomePage","ShopPage","Header","SignInSignUpPage","CheckoutPage","checkUserSession","selectCurrentUser","App","props","currentUser","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,OAAOC,gBAAP,MAA6B,uDAA7B;AACA,OAAOC,YAAP,MAAyB,qCAAzB,C,CACA;;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,iBAAT,QAAkC,4BAAlC,C,CAEA;;AACA,MAAMC,GAAG,GAAG,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAA0B;AACpCX,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,gBAAgB;AACjB,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT,CADoC,CAKpC;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEL,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,MAAM,EAAE,MACN,KAAKO,KAAL,CAAWC,WAAX,GAAyB,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAzB,GAA+C,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAUE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,WAAlB;AAA8B,IAAA,SAAS,EAAEL,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAFF,CADF;AAiBD,CA5CD;;AA8CA,MAAMM,eAAe,GAAGX,wBAAwB,CAAC;AAC/CU,EAAAA,WAAW,EAAEH;AADkC,CAAD,CAAhD;;AAIA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACtCP,EAAAA,gBAAgB,EAAE,MAAMO,QAAQ,CAACP,gBAAgB,EAAjB;AADM,CAAL,CAAnC;;AAGA,eAAeP,OAAO,CAACY,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CJ,GAA7C,CAAf,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useEffect } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport './App.css';\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component.jsx';\nimport Header from './components/header/header.component.jsx';\nimport SignInSignUpPage from './pages/sign-in-up-page/sign-in-up-page.component.jsx';\nimport CheckoutPage from './pages/checkout/checkout.component';\n// import { setCurrentUser } from './redux/user/user.actions';\nimport { checkUserSession } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selector';\n\n// put checkUserSession into the dependancy array since it's passed trough mapDispatchToProps\nconst App = ({ checkUserSession }) => {\n  useEffect(() => {\n    checkUserSession();\n  }, [checkUserSession]);\n\n  // unsubscribeFromAuth = null;\n  // componentDidMount() {\n\n  //   checkUserSession();\n\n  // this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //   if (userAuth) {\n  //     const userRef = await createUserProfileDoc(userAuth);\n  //     //onSnapshot == similar to onAuthStateChanges\n  //     userRef.onSnapshot(snapshot => {\n  //       this.props.setCurrentUser({ id: snapshot.id, ...snapshot.data() });\n  //     });\n  //   } else {\n  //     this.props.setCurrentUser(userAuth);\n  //   }\n  // });\n  // }\n\n  // componentWillUnmount() {\n  //   this.unsubscribeFromAuth();\n  // }\n\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/shop\" component={ShopPage} />\n        <Route\n          exact\n          path=\"/signin\"\n          render={() =>\n            this.props.currentUser ? <Redirect to=\"/\" /> : <SignInSignUpPage />\n          }\n        />\n        <Route exact path=\"/checkout\" component={CheckoutPage} />\n      </Switch>\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n// to seed Firebase database:\n//import { selectCollectionForView } from './redux/shop/shop.selectors';\n//import { auth, createUserProfileDoc, addCollectionAndDocs} from './firebase/firebase.utils';\n\n// componentDidMount() {\n//   this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n//     if (userAuth) {\n//       const userRef = await createUserProfileDoc(userAuth);\n//       userRef.onSnapshot(snapshot => {\n//         this.props.setCurrentUser({ id: snapshot.id, ...snapshot.data() });\n//       });\n//     } else {\n//       this.props.setCurrentUser(userAuth);\n\n// ****LOOK HERE****\n//       addCollectionAndDocs(\n//         'collections',\n//         this.props.collectionsArray.map(({ title, items }) => ({\n//           title,\n//           items,\n//         }))\n//       );\n//     }\n//   });\n// }\n\n//const mapStateToProps = createStructuredSelector({\n//   currentUser: selectCurrentUser,\n//**** LOOK HERE****\n//   collectionsArray: selectCollectionForView,\n// });\n"]},"metadata":{},"sourceType":"module"}